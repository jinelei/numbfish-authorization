<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinelei.numbfish.authorization.mapper.RoleMapper">

    <select id="selectMaxSortValue" resultType="int">
        select IFNULL(MAX(sort_value), 0)
        from permission
        where 1 = 1
        <if test="parentId!= null and parentId > 0">
            and parent_id = #{parentId}
        </if>
    </select>

    <select id="getRoleWithPermissions" resultMap="RoleWithPermissionsResultMap">
        SELECT r.*, p.*
        FROM role r
        LEFT JOIN role_permission rp ON r.id = rp.role_id
        LEFT JOIN permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>
    <resultMap id="RoleWithPermissionsResultMap" type="com.jinelei.numbfish.authorization.entity.RoleEntity">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="whitePermissions" ofType="com.jinelei.numbfish.authorization.entity.PermissionEntity">
            <id property="id" column="p_id"/>
            <result property="name" column="p_name"/>
        </collection>
    </resultMap>

    <select id="selectTree" resultType="com.jinelei.numbfish.authorization.entity.RoleEntity">
    WITH RECURSIVE role_tree AS (
                    SELECT
                        id,
                        name,
                        code,
                        type,
                        sort_value,
                        parent_id,
                        remark,
                        created_user_id,
                        created_time,
                        updated_user_id,
                        updated_time,
                        0 AS level,
                        CAST(id AS CHAR(1023)) AS ancestor
                    FROM
                        role
                    WHERE
                        parent_id is null
                    UNION ALL
                    SELECT
                        p.id,
                        p.name,
                        p.code,
                        p.type,
                        p.sort_value,
                        p.parent_id,
                        p.remark,
                        p.created_user_id,
                        p.created_time,
                        p.updated_user_id,
                        p.updated_time,
                        pt.level + 1,
                        CONCAT(pt.ancestor, ',', CAST(p.id AS CHAR(1023)))
                    FROM
                        role p
                    JOIN
                        role_tree pt ON p.parent_id = pt.id
                )
                SELECT
                    id,
                    name,
                    code,
                    type,
                    sort_value,
                    parent_id,
                    remark,
                    created_user_id,
                    created_time,
                    updated_user_id,
                    updated_time,
                    level,
                    ancestor
                FROM
                    role_tree
                <if test="ids!= null and ids.size() > 0">
                WHERE
                <choose>
                    <when test="mode == @com.jinelei.numbfish.authorization.enumeration.TreeBuildMode@ALL">
                        <foreach item="id" collection="ids" separator="or" >
                    ancestor LIKE CONCAT('%', #{id}, '%')
                        </foreach>
                    </when>
                    <when test="mode == @com.jinelei.numbfish.authorization.enumeration.TreeBuildMode@PARENT">
                        <foreach item="id" collection="ids" separator="or" >
                    ancestor LIKE CONCAT('%', #{id}) AND id != #{id}
                        </foreach>
                    </when>
                    <when test="mode == @com.jinelei.numbfish.authorization.enumeration.TreeBuildMode@PARENT_AND_CURRENT">
                        <foreach item="id" collection="ids" separator="or" >
                    ancestor LIKE CONCAT('%', #{id})
                        </foreach>
                    </when>
                    <when test="mode == @com.jinelei.numbfish.authorization.enumeration.TreeBuildMode@CHILD">
                        <foreach item="id" collection="ids" separator="or" >
                    ancestor LIKE CONCAT('%', #{id}, ',%')
                        </foreach>
                    </when>
                    <when test="mode == @com.jinelei.numbfish.authorization.enumeration.TreeBuildMode@CHILD_AND_CURRENT">
                        <foreach item="id" collection="ids" separator="or" >
                    ancestor LIKE CONCAT('%', #{id}, '%')
                        </foreach>
                    </when>
                    <otherwise>
                        <foreach item="id" collection="ids" separator="or" >
                    ancestor LIKE CONCAT('%', #{id}, '%')
                        </foreach>
                    </otherwise>
                </choose>
                </if>
                ORDER BY
                    level, sort_value;
    </select>

</mapper>
